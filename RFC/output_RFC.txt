Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9612703330751355, Test accuracy: 0.8405253283302064, F1: 0.8403341986481682
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9628195197521301, Test accuracy: 0.8273921200750469, F1: 0.8271620963180959
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9643687064291248, Test accuracy: 0.8592870544090057, F1: 0.8592880450487479
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9705654531371031, Test accuracy: 0.851782363977486, F1: 0.8517259886065851
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9628195197521301, Test accuracy: 0.8330206378986866, F1: 0.8329888942256627
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9682416731216111, Test accuracy: 0.8255159474671669, F1: 0.8255159474671669
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9628195197521301, Test accuracy: 0.8330206378986866, F1: 0.8329971217487561
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9682416731216111, Test accuracy: 0.8292682926829268, F1: 0.8292574736782632
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9481022463206816, Test accuracy: 0.8161350844277674, F1: 0.8150145924536167
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9604957397366383, Test accuracy: 0.8348968105065666, F1: 0.8342430844324369
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9457784663051898, Test accuracy: 0.8180112570356473, F1: 0.8169553903537183
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9573973663826492, Test accuracy: 0.8180112570356473, F1: 0.8171549000219285
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9426800929512006, Test accuracy: 0.8236397748592871, F1: 0.8217068708107785
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9488768396591789, Test accuracy: 0.8273921200750469, F1: 0.8257659437318973
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9457784663051898, Test accuracy: 0.8348968105065666, F1: 0.8333413374826844
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9558481797056545, Test accuracy: 0.8386491557223265, F1: 0.8373580648593792
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9488768396591789, Test accuracy: 0.8255159474671669, F1: 0.8244003497922558
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9496514329976762, Test accuracy: 0.8273921200750469, F1: 0.8264398698664017
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9504260263361735, Test accuracy: 0.8480300187617261, F1: 0.8473916000678012
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.95429899302866, Test accuracy: 0.8442776735459663, F1: 0.8434618221565247
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9488768396591789, Test accuracy: 0.8161350844277674, F1: 0.8154070712997592
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9550735863671572, Test accuracy: 0.8217636022514071, F1: 0.8211792722314093
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9589465530596437, Test accuracy: 0.849906191369606, F1: 0.849562950305262
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9690162664601084, Test accuracy: 0.8367729831144465, F1: 0.8365324059276615
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9271882261812548, Test accuracy: 0.8292682926829268, F1: 0.827722281380818
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9388071262587142, Test accuracy: 0.8217636022514071, F1: 0.8201496344085462
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9256390395042603, Test accuracy: 0.8198874296435272, F1: 0.8180546728649304
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9364833462432223, Test accuracy: 0.8311444652908068, F1: 0.8294262558108723
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9326103795507359, Test accuracy: 0.8236397748592871, F1: 0.8221060333458143
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.935708752904725, Test accuracy: 0.8330206378986866, F1: 0.8316271122249633
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9310611928737413, Test accuracy: 0.8180112570356473, F1: 0.8157922698349438
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.941130906274206, Test accuracy: 0.8198874296435272, F1: 0.8179133999769652
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9403563129357088, Test accuracy: 0.8386491557223265, F1: 0.8379312038190253
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9589465530596437, Test accuracy: 0.8405253283302064, F1: 0.8397749123903497
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9481022463206816, Test accuracy: 0.8311444652908068, F1: 0.8296759893736518
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9550735863671572, Test accuracy: 0.8273921200750469, F1: 0.8260109531053823
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9442292796281953, Test accuracy: 0.8180112570356473, F1: 0.8169553903537183
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9566227730441518, Test accuracy: 0.8292682926829268, F1: 0.8285510568662953
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9589465530596437, Test accuracy: 0.8217636022514071, F1: 0.820729506016528
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9635941130906274, Test accuracy: 0.8405253283302064, F1: 0.839931243144173
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9512006196746708, Test accuracy: 0.8649155722326454, F1: 0.8648299143225262
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9550735863671572, Test accuracy: 0.8724202626641651, F1: 0.8723132719048772
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9504260263361735, Test accuracy: 0.8348968105065666, F1: 0.8342430844324369
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9504260263361735, Test accuracy: 0.8273921200750469, F1: 0.8266240785040735
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9465530596436871, Test accuracy: 0.8424015009380863, F1: 0.8416184388338037
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9566227730441518, Test accuracy: 0.8442776735459663, F1: 0.8439491002228672
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9604957397366383, Test accuracy: 0.8424015009380863, F1: 0.842041097820525
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9682416731216111, Test accuracy: 0.851782363977486, F1: 0.8516047258024152
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9496514329976762, Test accuracy: 0.8180112570356473, F1: 0.8167346322042504
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9581719597211464, Test accuracy: 0.8292682926829268, F1: 0.8283738050149848
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9504260263361735, Test accuracy: 0.8330206378986866, F1: 0.8321458093003697
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.959721146398141, Test accuracy: 0.8292682926829268, F1: 0.8285510568662953
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9473276529821844, Test accuracy: 0.8442776735459663, F1: 0.8436975668348985
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9550735863671572, Test accuracy: 0.8330206378986866, F1: 0.8324732129325834
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9473276529821844, Test accuracy: 0.8386491557223265, F1: 0.8378474492822277
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9512006196746708, Test accuracy: 0.8405253283302064, F1: 0.8395056960466853
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9496514329976762, Test accuracy: 0.8330206378986866, F1: 0.8325430300703387
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9589465530596437, Test accuracy: 0.8330206378986866, F1: 0.8328982711995465
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.935708752904725, Test accuracy: 0.8142589118198874, F1: 0.813285787873445
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9473276529821844, Test accuracy: 0.8367729831144465, F1: 0.8363061080462861
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9504260263361735, Test accuracy: 0.8348968105065666, F1: 0.8345764638162589
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9659178931061193, Test accuracy: 0.8348968105065666, F1: 0.8346289748909403
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9573973663826492, Test accuracy: 0.8236397748592871, F1: 0.8228550367324229
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9659178931061193, Test accuracy: 0.8161350844277674, F1: 0.8154070712997592
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9612703330751355, Test accuracy: 0.8236397748592871, F1: 0.8232975863491856
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9558481797056545, Test accuracy: 0.8236397748592871, F1: 0.8235590238404497
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9512006196746708, Test accuracy: 0.8292682926829268, F1: 0.8291756779198758
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9573973663826492, Test accuracy: 0.8311444652908068, F1: 0.8311123598611205
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.959721146398141, Test accuracy: 0.8405253283302064, F1: 0.8403735895274969
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9659178931061193, Test accuracy: 0.8348968105065666, F1: 0.8348456460067799
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9604957397366383, Test accuracy: 0.8461538461538461, F1: 0.8460562913117657
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9635941130906274, Test accuracy: 0.8330206378986866, F1: 0.8330147601028826
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9604957397366383, Test accuracy: 0.8273921200750469, F1: 0.8267882974562282
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 40, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.965143299767622, Test accuracy: 0.8367729831144465, F1: 0.8363061080462861
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9558481797056545, Test accuracy: 0.8348968105065666, F1: 0.8345764638162589
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 50, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9659178931061193, Test accuracy: 0.8405253283302064, F1: 0.8403735895274969
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.95429899302866, Test accuracy: 0.8461538461538461, F1: 0.8458553412833321
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 60, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9643687064291248, Test accuracy: 0.8442776735459663, F1: 0.8441635562872175
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 25} => Train accuracy: 0.9612703330751355, Test accuracy: 0.8330206378986866, F1: 0.8322349082675425
Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30} => Train accuracy: 0.9666924864446166, Test accuracy: 0.8330206378986866, F1: 0.8326683122871708
=====================================================
Best Params: {Param(parent='RandomForestClassifier_1b28f6365a78', name='bootstrap', doc='Whether bootstrap samples are used when building trees.'): True, Param(parent='RandomForestClassifier_1b28f6365a78', name='cacheNodeIds', doc='If false, the algorithm will pass trees to executors to match instances with nodes. If true, the algorithm will cache node IDs for each instance. Caching can speed up training of deeper trees. Users can set how often should the cache be checkpointed or disable it by setting checkpointInterval.'): False, Param(parent='RandomForestClassifier_1b28f6365a78', name='checkpointInterval', doc='set checkpoint interval (>= 1) or disable checkpoint (-1). E.g. 10 means that the cache will get checkpointed every 10 iterations. Note: this setting will be ignored if the checkpoint directory is not set in the SparkContext.'): 10, Param(parent='RandomForestClassifier_1b28f6365a78', name='featureSubsetStrategy', doc="The number of features to consider for splits at each tree node. Supported options: 'auto' (choose automatically for task: If numTrees == 1, set to 'all'. If numTrees > 1 (forest), set to 'sqrt' for classification and to 'onethird' for regression), 'all' (use all features), 'onethird' (use 1/3 of the features), 'sqrt' (use sqrt(number of features)), 'log2' (use log2(number of features)), 'n' (when n is in the range (0, 1.0], use n * number of features. When n is in the range (1, number of features), use n features). default = 'auto'"): 'auto', Param(parent='RandomForestClassifier_1b28f6365a78', name='featuresCol', doc='features column name.'): 'features', Param(parent='RandomForestClassifier_1b28f6365a78', name='impurity', doc='Criterion used for information gain calculation (case-insensitive). Supported options: entropy, gini'): 'gini', Param(parent='RandomForestClassifier_1b28f6365a78', name='labelCol', doc='label column name.'): 'fraudulent', Param(parent='RandomForestClassifier_1b28f6365a78', name='leafCol', doc='Leaf indices column name. Predicted leaf index of each instance in each tree by preorder.'): '', Param(parent='RandomForestClassifier_1b28f6365a78', name='maxBins', doc='Max number of bins for discretizing continuous features.  Must be >=2 and >= number of categories for any categorical feature.'): 32, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 30, Param(parent='RandomForestClassifier_1b28f6365a78', name='maxMemoryInMB', doc='Maximum memory in MB allocated to histogram aggregation. If too small, then 1 node will be split per iteration, and its aggregates may exceed this size.'): 256, Param(parent='RandomForestClassifier_1b28f6365a78', name='minInfoGain', doc='Minimum information gain for a split to be considered at a tree node.'): 0.0, Param(parent='RandomForestClassifier_1b28f6365a78', name='minInstancesPerNode', doc='Minimum number of instances each child must have after split. If a split causes the left or right child to have fewer than minInstancesPerNode, the split will be discarded as invalid. Should be >= 1.'): 1, Param(parent='RandomForestClassifier_1b28f6365a78', name='minWeightFractionPerNode', doc='Minimum fraction of the weighted sample count that each child must have after split. If a split causes the fraction of the total weight in the left or right child to be less than minWeightFractionPerNode, the split will be discarded as invalid. Should be in interval [0.0, 0.5).'): 0.0, Param(parent='RandomForestClassifier_1b28f6365a78', name='numTrees', doc='Number of trees to train (>= 1).'): 70, Param(parent='RandomForestClassifier_1b28f6365a78', name='predictionCol', doc='prediction column name.'): 'prediction', Param(parent='RandomForestClassifier_1b28f6365a78', name='probabilityCol', doc='Column name for predicted class conditional probabilities. Note: Not all models output well-calibrated probability estimates! These probabilities should be treated as confidences, not precise probabilities.'): 'probability', Param(parent='RandomForestClassifier_1b28f6365a78', name='rawPredictionCol', doc='raw prediction (a.k.a. confidence) column name.'): 'rawPrediction', Param(parent='RandomForestClassifier_1b28f6365a78', name='seed', doc='random seed.'): -5387697053847413545, Param(parent='RandomForestClassifier_1b28f6365a78', name='subsamplingRate', doc='Fraction of the training data used for learning each decision tree, in range (0, 1].'): 1.0}
